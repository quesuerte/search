#https://github.com/strimzi/strimzi-kafka-operator/issues/3047
apiVersion: v1
kind: ConfigMap
metadata:
  name: sink-config-map
data:
  sink.json: |
    {
      "name": "search-sink-connector",
      "config": {
        "connector.class": "io.debezium.connector.jdbc.JdbcSinkConnector",
        "tasks.max": "1",
        "connection.url": "jdbc:postgresql://pdf-service:5432/logs",
        "connection.username": "log_writer",
        "connection.password": "test_password",
        "insert.mode": "insert",
        "delete.enabled": "false",
        "schema.evolution": "none",
        "topics": "search_log",
        "table.name.format": "search_requests",
        "value.converter": "org.apache.kafka.connect.json.JsonConverter",
        "value.converter.schemas.enable": "false"
      }
    }
#        "value.converter.schemas.enable": "false"
#        "value.converter": "io.apicurio.registry.utils.converter.AvroConverter",
#        "value.converter.apicurio.registry.url": "http://localhost:8080/apis/registry/v2"
    
---
apiVersion: batch/v1
kind: Job
metadata:
  name: load-sink-config
spec:
  template:
    spec:
      containers:
      - name: load-sink
        image: alpine:latest
        env:
        - name: DEBEZIUM_URL
          value: "http://pdf-service:8083"
        command:
        - sh
        - -c
        - |-
          _term() { 
            echo "Caught SIGTERM signal!" 
            exit 1
          }
          trap _term SIGTERM
          apk add curl --no-cache
          WAIT_TIME=90
          COUNT=$WAIT_TIME
          while true; do
              response=$(curl -s -o /dev/null -w "%{http_code}" "$DEBEZIUM_URL")
          
              if [ "$response" -eq 200 ]; then
                  echo "Debezium Kafka Connect is running!"
                  break
              else
                  if [ $COUNT -le 0 ]; then
                      echo "Debezium not ready after $WAIT_TIME seconds, quitting"
                      exit 1;
                  fi
                  echo "Debezium Kafka Connect is not ready yet (HTTP $response). Retrying in 5 seconds..."
                  sleep 5
                  COUNT=$((COUNT - 5))
              fi
          done
          curl -X DELETE "$DEBEZIUM_URL/connectors/search-sink-connector"
          cd /opt && curl -v -X POST -H "Accept:application/json" \
          -H "Content-Type:application/json" \
          "$DEBEZIUM_URL/connectors/" \
          --data-binary @sink.json || exit 1
        volumeMounts:
        - name: sink-config
          mountPath: /opt/sink.json
          subPath: sink.json
      volumes:
      - name: sink-config
        configMap:
          name: sink-config-map
      restartPolicy: Never
  backoffLimit: 1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: debezium-deployment
spec:
  selector:
    matchLabels:
      app: pdf-app
  replicas: 1
  template:
    metadata:
      labels:
        app: pdf-app
    spec:
      hostname: debezium
      initContainers:
      - name: download
        image: alpine:latest
        args: 
        - sh
        - -c
        - |-
          apk add curl --no-cache
          cd /opt 
          mvn dependency:copy-dependencies -DoutputDirectory=/opt/dependency
        volumeMounts:
        - name: java-dependencies
          mountPath: /opt/dependency
      containers:
      - name: debezium
        image: quay.io/debezium/connect:latest
        env:
        - name: GROUP_ID
          value: "100"
        - name: CONFIG_STORAGE_TOPIC
          value: "debezium_storage"
        - name: OFFSET_STORAGE_TOPIC
          value: "debezium_offset"
        - name: BOOTSTRAP_SERVERS
          value: "kafka-internal:9092"
        ports:
        - name: dbz-port
          containerPort: 8083
        volumeMounts:
        - name: java-dependencies
          mountPath: /kafka/connect/jars/
      volumes:
      - name: pom-config
        configMap:
          name: pom-config-map
      - name: java-dependencies
        emptyDir:
          sizeLimit: 10Mi
